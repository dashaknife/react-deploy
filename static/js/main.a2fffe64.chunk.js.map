{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","isWinner","player","state","count","i","line","winnerLine","squares","alert","setTimeout","setState","Array","fill","clickHandler","event","data","target","getAttribute","currentSquare","className","onClick","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a2fffe64.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      count: 0\n    }\n    this.winnerLine = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6]\n    ]\n  }\n\n  isWinner = () => {\n    let player = (this.state.count % 2 === 0) ? 'X' : 'O';\n    for (let i = 0; i < 8; i++) {\n      let line = this.winnerLine[i];\n      if (this.state.squares[line[0]] === player\n        && this.state.squares[line[1]] === player\n        && this.state.squares[line[2]] === player) {\n        alert('Выиграл - ' + player);\n        setTimeout(() => {\n          this.setState({ squares: Array(9).fill(null)});\n          this.setState({ count: 0 });\n        }, 2000)\n      }\n    }\n  }\n\n  clickHandler = event => {\n    //data - номер клетки \n    let data = event.target.getAttribute('data');\n    let currentSquare = this.state.squares;\n\n    if (currentSquare[data] === null) {\n      currentSquare[data] = (this.state.count % 2 === 0) ? 'X' : 'O';\n      this.setState({ count: this.state.count + 1 });\n      this.setState({ squares: currentSquare });\n    }\n    else {\n      alert('Клетка занята!');\n    }\n    this.isWinner();\n  }\n\n  render() {\n    return (\n      <div className=\"App-header\">\n        <h1>React \"Крестики-нолики\"</h1>\n        <h4>Первый игрок - Х</h4>\n        <h4>Второй игрок - О</h4>\n        <div className=\"tic-tac-toe\">\n          <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"0\">\n            <div className=\"ttt-number\">{this.state.squares[0]}</div>\n          </div>\n          <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"1\">\n            <div className=\"ttt-number\">{this.state.squares[1]}</div>\n          </div>\n          <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"2\">\n            <div className=\"ttt-number\">{this.state.squares[2]}</div>\n          </div>\n          <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"3\">\n            <div className=\"ttt-number\">{this.state.squares[3]}</div>\n          </div>\n          <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"4\">\n            <div className=\"ttt-number\">{this.state.squares[4]}</div>\n          </div>\n          <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"5\">\n            <div className=\"ttt-number\">{this.state.squares[5]}</div>\n          </div>\n          <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"6\">\n            <div className=\"ttt-number\">{this.state.squares[6]}</div>\n          </div>\n          <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"7\">\n            <div className=\"ttt-number\">{this.state.squares[7]}</div>\n          </div>\n          <div className=\"ttt-grid\" onClick={this.clickHandler} data=\"8\">\n            <div className=\"ttt-number\">{this.state.squares[8]}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}